package gresolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"fmt"

	"github.com/stadio-app/stadio-backend/graph"
	gmodel "github.com/stadio-app/stadio-backend/graph/model"
)

// SayHello is the resolver for the sayHello field.
func (r *queryResolver) SayHello(ctx context.Context, name string, message *string, showMessage *bool) (*gmodel.Hello, error) {
	if message != nil {
		return &gmodel.Hello{
			Name:    name,
			Message: *message,
		}, nil
	}
	return &gmodel.Hello{
		Name:    name,
		Message: fmt.Sprintf("Howdy %s! We hope you have a great day :)", name),
	}, nil
}

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
