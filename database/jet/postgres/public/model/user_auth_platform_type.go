//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package model

import "errors"

type UserAuthPlatformType string

const (
	UserAuthPlatformType_Internal UserAuthPlatformType = "INTERNAL"
	UserAuthPlatformType_Apple    UserAuthPlatformType = "APPLE"
	UserAuthPlatformType_Google   UserAuthPlatformType = "GOOGLE"
)

func (e *UserAuthPlatformType) Scan(value interface{}) error {
	var enumValue string
	switch val := value.(type) {
	case string:
		enumValue = val
	case []byte:
		enumValue = string(val)
	default:
		return errors.New("jet: Invalid scan value for AllTypesEnum enum. Enum value has to be of type string or []byte")
	}

	switch enumValue {
	case "INTERNAL":
		*e = UserAuthPlatformType_Internal
	case "APPLE":
		*e = UserAuthPlatformType_Apple
	case "GOOGLE":
		*e = UserAuthPlatformType_Google
	default:
		return errors.New("jet: Invalid scan value '" + enumValue + "' for UserAuthPlatformType enum")
	}

	return nil
}

func (e UserAuthPlatformType) String() string {
	return string(e)
}
